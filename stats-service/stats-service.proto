syntax = "proto3";

package stats;

option go_package = "stats-service.v1;statsv1";


// Сервис для работы со статистикой
service StatsService {
  // Метод для получения статистики
  rpc GetStats (GetStatsRequest) returns (GetStatsResponse);

  // Метод для создания новой записи в статистике
  rpc SetStat (SetStatRequest) returns (UpdateStatsResponse);
}

// Сервис для работы с AI-сервисами
service AIService {

  // Метод для создания нового AI-сервиса
  rpc CreateAIService (CreateServiceRequest) returns (CreateServiceResponse);
}

message SetStatRequest {
  string user_uid = 1;
  string service_uid = 2;
}

message UpdateStatsResponse {
  string count = 1;
}

enum OrderEnum {
  ASC = 0;
  DESC = 1;
}

message GetStatsRequest {
  string user_uid = 1;
  string service_uid = 2;
  uint32 page_number = 3;
  uint32 page_size = 4;
  OrderEnum order = 5;
}

message GetStatsResponse {
  repeated Stats stats = 1;
}

message Stats {
  string user_uid = 1;
  string service_uid = 2;
  uint32 count = 3;
  uint32 amount = 4;
}

message CreateServiceRequest {
  string title = 1;
  string description = 2;
  uint32 price = 3;
}

message CreateServiceResponse {
  string service_uid = 1;
}